@using Microsoft.AspNetCore.Identity
@using WebApplication1.Models.Entities
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var currentUser = await UserManager.GetUserAsync(User);
        <li>
            <a style="border: 0;"  asp-area="Identity" asp-page="/Account/Manage/Index">
                @if (!string.IsNullOrEmpty(currentUser?.PictureUrl))
                {
                    <img src="@currentUser.PictureUrl" alt="@currentUser.UserName" class="rounded-circle" style="width: 40px; height: 40px;"> 
                }
                else
                {
                    @currentUser?.UserName
                }
            </a>
            <div style="margin-top: 10px;">
                <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post">
                    <button type="submit" class="dropdown-item p-0">Logout</button>
                </form>
            </div>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="button primary fit" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item" style="margin-top: 10px;">
            <a class="button fit" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
