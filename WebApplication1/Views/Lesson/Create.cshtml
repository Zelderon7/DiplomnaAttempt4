@model WebApplication1.Models.VMs.LessonVM
@model LessonAndContentVM
<h2>Create Lesson</h2>
}
<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="Title"></label>
        <input asp-for="Title" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="ClassSectionId"></label>
        <input asp-for="ClassSectionId" class="form-control" />
    </div>

    <h3>Contents</h3>
    <div id="contents-list">
        <!-- Contents will be dynamically added here -->
    </div>

    <button type="button" id="add-content" class="btn btn-primary">Add Content</button>
    <button type="submit" class="btn btn-success">Save Lesson</button>
</form>

<!-- Template for a new content item -->
<div id="content-template" style="display: none;">
    <div class="content-item">
        <select class="form-control content-type">
            <option value="header">Header</option>
            <option value="text">Text</option>
            <option value="bulletpoints">Bullet Points</option>
            <option value="image">Image</option>
        </select>
        <input type="text" class="form-control content-data" placeholder="Enter data..." />
        <input type="hidden" class="content-order" value="0" />
        <button type="button" class="btn btn-danger remove-content">Remove</button>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const contentsList = document.getElementById("contents-list");
            const addContentButton = document.getElementById("add-content");
            const contentTemplate = document.getElementById("content-template").innerHTML;

            let contentIndex = 0;

            // Add new content
            addContentButton.addEventListener("click", function () {
                const newContent = document.createElement("div");
                newContent.innerHTML = contentTemplate;
                newContent.querySelector(".content-order").value = contentIndex++;
                contentsList.appendChild(newContent);
            });

            // Remove content
            contentsList.addEventListener("click", function (e) {
                if (e.target.classList.contains("remove-content")) {
                    e.target.closest(".content-item").remove();
                    updateOrderIndexes();
                }
            });

            // Initialize Sortable for drag-and-drop
            new Sortable(contentsList, {
                animation: 150,
                onEnd: function () {
                    updateOrderIndexes();
                }
            });

            // Update OrderIndex values after reordering
            function updateOrderIndexes() {
                const items = contentsList.querySelectorAll(".content-item");
                items.forEach((item, index) => {
                    item.querySelector(".content-order").value = index;
                });
            }
        });
    </script>
}</div>